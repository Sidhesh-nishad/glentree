---
import Layout from '../layouts/Layout.astro';

import Text from '../components/system/Text.astro';
import BigAdmissionCTA from '../components/BigAdmissionCTA.astro';

import Button from '../components/system/Button.astro';

import TopNavigationBar from '../components/TopNavigationBar.astro';
import AdmissionMarquee from '../components/campus/admissionMarquee.astro';

import coscholasticsBG from '../images/coscholastics/coscholasticsBG.jpeg';

import '../global.css'
import GalleryMarquee from '../components/campus/galleryMarquee.astro';
import Footer from '../components/landingPage/Footer.astro';

import Constrain from '../components/system/Constrain.astro';

import computerScience from '../images/coscholastics/computerScience.jpeg'
import taekwondo from '../images/coscholastics/Taekwondo.jpg'
import visual from '../images/coscholastics/visualArt.jpeg'
import yoga from '../images/coscholastics/Yoga.jpeg'
import sports from '../images/coscholastics/Sports.jpg'
import ELE from '../images/coscholastics/ELE.jpeg'
import fieldtrip from '../images/coscholastics/FieldTrip.jpeg'
import reading from '../images/coscholastics/ReadingEnrichment.jpeg'

import { Image } from 'astro:assets';
import { getEntries, getEntry, type CollectionEntry } from 'astro:content';
const { data } = await getEntry('coscholastics', 'coscholastics') as CollectionEntry<'coscholastics'>


const coscholastics = data?.coscholastics || []


const titleTag = data?.titleTag
const metaDescription = data?.metaDescription


import { marked } from 'marked'
const {
  titleHero,
  descriptionHero,
  imageHero,
  imageHeroAlt
} = data
const titleHeroParsed = marked(titleHero)
const descriptionHeroParsed = marked(descriptionHero)

---

<Layout 
  title={titleTag}
  description={metaDescription}
>
  <main class="flex flex-col h-screen w-screen relative bg-white">
    <div 
      class="flex-1 main-container h-screen w-screen"
      style={{
        overflowY: 'overlay',
        overflowX: 'hidden',
      }}
    >
      <div class='flex flex-col bg-white'>
        <TopNavigationBar />
        <div class='h-[130px] w-full bg-black'>
        </div>
  
        <div class='min-h-[450px] relative max-h-[350px] w-full max-md:min-h-[350px]'>
          <div class="absolute top-0 left-0 w-full h-full z-10">
            <Image 
              src={imageHero} 
              alt={imageHeroAlt}
              class='w-full h-full object-cover object-center'
              width={1440} height={600}
            />
          </div>
    
          <div class="absolute top-0 left-0 w-full h-full z-20" style={{
            background: `linear-gradient(180deg, rgba(18, 18, 18, 0.00) 3.1%, rgba(0, 0, 0, 0.60) 100%)`,
          }}>
          </div>
          <div class="absolute top-0 left-0 w-full h-full flex justify-end p-[30px] items-center flex-col z-30">
            <Text type={'h1Sm'} class='mt-14 max-md:mt-10 z-30'>
              <div set:html={titleHeroParsed} />
            </Text>
            <Text type={'base'} class='mt-3 text-center max-md:w-[90%]' >
              <div set:html={descriptionHeroParsed} />
            </Text>
          </div>
        </div>

        
        <div class='w-full px-20 py-16 max-md:px-4 max-md:py-6' style={{
          background: 'linear-gradient(180deg, #000000 0%, #142C1E 108.48%)'
        }}>
          <Constrain class="flex flex-row flex-wrap gap-5 justify-center items-center">
            {coscholastics.map(coscholastic => (
              <div 
                style={{
                  background: 'rgba(255, 255, 255, 0.04)',
                  border: '0.807503px solid rgba(255, 255, 255, 0.24)',
                  backdropFilter: 'blur(16px)',
                  borderRadius: '24px'
                }}
                class='p-4 w-[400px] min-h-[480px]'
              >
              <Image
                  class='w-full h-[320px] object-cover object-center rounded-2xl' 
                  src={coscholastic.thumbnail}
                  width={400}
                  height={320}
                  alt={coscholastic.thumbnailAlt}
                />
                {Array.isArray(coscholastic.title) ? (
                  <div class="children-inline mt-4">
                    {coscholastic.title.map(title => (
                      title.type === 'normal' 
                        ? <Text type='h4' class='mt-4'>{title.text}</Text>
                        : <Text type='h4' class='mt-4 text-lg'>{title.text}</Text>
                    ))}
                  </div>
                ) : (
                  <Text type='h4' class='mt-4'>{coscholastic.title}</Text>
                )
                }
                <Text type='sm' class='mt-2 text-white/80'>{coscholastic.description}</Text>
              </div>
            ))}
            <div class='p-4 w-[400px]'></div>
          </Constrain>
        </div>
        <Footer />
      </div>
    </div>
  </main>
</Layout>

<style>
  .children-inline * {
    display: inline;
  }
</style>