---
import Layout from "../layouts/Layout.astro";
import TopNavigationBar from "../components/TopNavigationBar.astro";
import Text from "../components/system/Text.astro";
import Select from "../components/system/Select.astro";
import { Image } from 'astro:assets';
import decorationSVG from '../images/decoration.svg'

import Footer from "../components/landingPage/Footer.astro";
import "../global.css";
import { getEntries, getCollection, type CollectionEntry } from 'astro:content';
import UpdatesCard from "../components/UpdatesCard.astro";


const { school } = Astro.params;
let updates =  await getCollection('Updates')

const slugToSchool = {
  whitefield: 'Whitefield',
  sarjapur: 'Sarjapur Road',
  bannerghatta: 'Bannerghatta Road',
}
let allUpdates = updates
  .reduce((acc, curr) => {
    return [
      ...acc,
      ...curr.data.updates.map(update => ({
        ...update,
        school: slugToSchool[curr.slug],
      }))
    ]
  }, []).sort((a, b) => {
    return (
      new Date(b.publishedDate) - 
      new Date(a.publishedDate)
    )
  })


// group blogs by 3 in each row
// let blogRow = allBlogs.reduce((acc, curr, index) => {
//   if (index % 3 === 0) {
//     acc.push([curr])
//   } else {
//     acc[acc.length - 1].push(curr)
//   }
//   return acc
// }, [])

const [
  firstPost,
  secondPost,
  ...posts
] = allUpdates
---

<!-- grid gap-4 grid-cols-3 -->

<Layout 
  title="Blogs | Best CBSE School in Bangalore | Glentree Academy School"
>
  <main class="flex flex-col relative text-black items-center">
    <TopNavigationBar />
    <div class="h-[95px] max-md:h-[130px]  w-full bg-black"></div>
    <div class="w-full p-[60px] max-md:p-5 relative" style={{
      background: 'linear-gradient(249deg, #FBFFF6 0%, #F6FFED 0%, #FFFAF6 100%)'
    }}>
      <Image class="absolute w-[230px] h-[200px] top-0 right-0 max-md:w-[105px] max-md:h-[105px]" src={decorationSVG} alt="decoration" />
      <div class="flex flex-row max-md:flex-col w-full justify-between gap-[60px]">
        <div class="flex-1">
          <div class="pt-4" />
          <div class="w-full relative text-center">
            <Text type="h1Sm">News & <span class="text-accent2">Events</span></Text>
            <Text type="base" class="mt-3 font-[600]">Stay up to date with the happenings at our school.</Text>
          </div>
          <div class="pt-12"></div>
          <div class="flex flex-row max-md:flex-col justify-between gap-12">
            <UpdatesCard
              video={firstPost.videoLink}
              title={firstPost.title},
              description={firstPost.description},
              thumbnail={firstPost.thumbnail},
              publishedDate={firstPost.publishedDate}
              alt={firstPost.alt}
              type="featured"
            />
            <UpdatesCard
              video={secondPost.videoLink}
              title={secondPost.title},
              description={secondPost.description},
              thumbnail={secondPost.thumbnail},
              publishedDate={secondPost.publishedDate}
              alt={secondPost.alt}
              type="featured"
            />
          </div>
        </div>
        <!-- <div>
            <UpdatesCard
              video={thirdPost.videoLink}
              title={thirdPost.title},
              description={thirdPost.description},
              thumbnail={thirdPost.thumbnail},
              publishedDate={thirdPost.publishedDate}
              alt={thirdPost.alt}
              type="featured-sm"
            />
            <div class="pt-[42px]" />
            <UpdatesCard
              video={fourthPost.videoLink}
              title={fourthPost.title},
              description={fourthPost.description},
              thumbnail={fourthPost.thumbnail},
              publishedDate={fourthPost.publishedDate}
              alt={fourthPost.alt}
              type="featured-sm"
            />
        </div> -->
      </div>
    </div>

    <div class="text-center">
      <div class="pt-[46px]"></div>
      <Text type="h2">All News & <span class="text-accent2">Events</span></Text>
      <Text type="base" class="mt-3">Stay up to date with the happenings at our school.</Text>
      <div class="pt-[20px]"></div>
      <!-- <div class="flex flex-row justify-center items-center gap-4">
        <Text type="subtitle">FILTER BY:</Text>

        <Select
          placeholder="Select Campus"
          id="selectCampus"
          options={[
            "All Campuses",
            "Whitefield",
            "Sarjapur Road",
            "Bannerghatta Road"
          ]}
          name="campus"
          required
          className="w-[180px] text-left"
          defaultValue="All Campuses"
        />
        
      </div> -->
      <div class="pt-[48px]"></div>

      <div class="flex flex-row gap-x-[60px] gap-y-[46px] flex-wrap max-md:px-[20px] w-full justify-center">
        {posts.map(post => (
          <UpdatesCard
            video={post.videoLink}
            title={post.title}
            school={post.school}
            description={post.description}
            thumbnail={post.thumbnail}
            publishedDate={post.publishedDate}
            alt={post.alt}
            type="normal"
            class="updates-card-target"
          />
        ))}
      </div>
    </div>
  </main>
  <div class="text-white w-full mt-12">
    <Footer />
  </div>
</Layout>

<script>
  const selectOptions = document.querySelectorAll('div[data-id="selectCampus"] .selectCustom-option')

  const updatesCard = document.querySelectorAll('.updates-card-target')
  
  document.querySelector('select[data-id="selectCampus"]')
    ?.addEventListener('change', (e) => {
      const campus = e.target.value
      updateEventsBySelectCampus(campus)
    })

  selectOptions.forEach(option => {
    option.addEventListener('click', (e) => {
      const campus = e.target.dataset.value
      updateEventsBySelectCampus(campus)
    })
  })

  function updateEventsBySelectCampus(selectedCampus) {
    const selectParent = document.querySelector('select[data-id="selectCampus"]')


    updatesCard.forEach(card => {
      if (selectedCampus === 'All Campuses') {
        card.classList.remove('hidden')
      } else if (card.dataset.school === selectedCampus) {
        card.classList.remove('hidden')
      } else {
        card.classList.add('hidden')
      }
    })
    
  }
  
</script>